#!/usr/bin/env python3

import json
import os
import sys
import re

def lookup(word):
    response = os.popen(f'echo {word} | hunspell').read()

    if "Hunspell" in response:
        response = response.replace(response[:15], '', 1)

    startLocation = response.find(":") + 1
    response = response[startLocation:None]

    response = os.linesep.join([s for s in response.splitlines() if s])
    response = re.sub(', ', ' ', response)
    result = response.split()

    if '*' in result:
        result = [word]
        
    return result

def clipboard(word):
    os.system('echo ' + word + ' | xclip -sel clip')

# App
class App(object):
    def __init__(self):
        self.match = None

    def activate(self, index):
        if not self.matches:
            return
        
        with os.popen('xclip -sel clip', 'w') as stream:
            stream.write(self.matches[index])
            stream.flush()

        sys.stdout.write('"Close"\n')
        sys.stdout.flush()

    def search(self, query):
        query = query.split(' ', 1)[1]
        self.matches = lookup(query)

        for index in range(len(self.matches)):
            sys.stdout.write(json.dumps({
                'Append': {
                    'id': index,
                    'name': f'Spell check: {query}',
                    'description': f'{self.matches[index]}',
                    'keywords': None,
                    'icon': None,
                    'exec': None,
                    'window': None
                }
            }))
            sys.stdout.write('\n')

        sys.stdout.write('"Finished"\n')
        sys.stdout.flush()

def main():
    app = App()

    for line in sys.stdin:
        try:
            request = json.loads(line)
            if 'Search' in request:
                app.search(request['Search'])
            elif 'Activate' in request:
                app.activate(request['Activate'])
        except json.decoder.JSONDecodeError:
            pass

if __name__ == '__main__':
    main()
